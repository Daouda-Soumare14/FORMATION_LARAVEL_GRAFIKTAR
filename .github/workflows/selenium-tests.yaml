# name: Selenium Tests

# on:
#   push:
#     branches:
#       - main
#   pull_request:

# jobs:
#   selenium-test:
#     runs-on: ubuntu-latest  # Exécution sur un serveur Linux GitHub

#     services:
#       selenium:
#         image: selenium/standalone-chrome
#         ports:
#           - 4444:4444

#     steps:
#       - name: 📥 Checkout du repository
#         uses: actions/checkout@v4

#       - name: 🛠️ Installation de PHP et Composer
#         run: |
#           sudo apt update
#           sudo apt install -y php-cli php-mbstring php-xml php-bcmath php-tokenizer php-curl php-zip unzip curl
#           curl -sS https://getcomposer.org/installer | php
#           sudo mv composer.phar /usr/local/bin/composer

#       - name: 📦 Installation des dépendances Laravel
#         run: |
#           composer install --no-interaction --prefer-dist
#           if [ ! -d "vendor" ]; then
#             echo "❌ Le dossier vendor/ est manquant, l'installation Composer a échoué."
#             exit 1
#           fi

#       - name: 📄 Vérifier et générer le fichier .env
#         run: |
#           if [ ! -f .env ]; then
#             cp .env.example .env
#           fi
#           php artisan key:generate

#       - name: 🗄️ Configurer SQLite et faire les migrations
#         run: |
#           touch database/database.sqlite
#           echo "DB_CONNECTION=sqlite" > .env
#           echo "DB_DATABASE=$(pwd)/database/database.sqlite" >> .env
#           php artisan migrate:fresh --seed || (echo "❌ Problème de migration !" && exit 1)

#       - name: 🛠 Installer ChromeDriver
#         run: |
#           sudo apt-get install -y chromium-chromedriver

#       - name: 🐍 Installation de Python et Selenium
#         run: |
#           python -m pip install --upgrade pip
#           pip install selenium webdriver-manager

#       - name: 🚀 Démarrer Laravel en arrière-plan
#         run: |
#           nohup php artisan serve --host=127.0.0.1 --port=8000 > storage/logs/server.log 2>&1 &
#           sleep 30  # Attendre que Laravel démarre correctement

#       - name: 🔍 Vérifier si Laravel tourne et afficher les logs
#         run: |
#           if ! netstat -tulnp | grep ":8000"; then
#             echo "⚠️ Laravel ne tourne pas sur le port 8000 !"
#             echo "📄 Affichage des logs de Laravel :"
#             cat storage/logs/server.log
#             exit 1
#           fi

#       - name: 🔍 Vérifier si Laravel est accessible
#         run: |
#           for i in {1..10}; do
#             curl -I http://127.0.0.1:8000 && exit 0
#             echo "Laravel n'est pas encore prêt... tentative $i/10"
#             sleep 5
#           done
#           echo "❌ Laravel ne répond pas après plusieurs tentatives."
#           exit 1  # Arrêt du processus si Laravel ne répond toujours pas

#       - name: 🚀 Exécution du test Selenium
#         run: python tests/test_selenium.py




name: Laravel Selenium Tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      selenium:
        image: selenium/standalone-chrome:latest
        ports:
          - 4444:4444

    env:
      DB_CONNECTION: sqlite
      DB_DATABASE: database/database.sqlite

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install Composer dependencies
        run: composer install --no-progress --no-suggest --prefer-dist

      - name: Set up SQLite database
        run: |
          mkdir -p database
          touch database/database.sqlite
          php artisan migrate --force

      - name: Start Laravel server
        run: php artisan serve &

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: pip install -r requirements.txt

      - name: Run Selenium tests
        run: pytest tests/selenium_tests.py  # Adapte selon ton script

      - name: Upload Selenium test results
        uses: actions/upload-artifact@v4
        with:
          name: selenium-test-results
          path: reports/
      
